<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[You might find this interesting]]></title>
  <link href="http://adamrb.github.io/atom.xml" rel="self"/>
  <link href="http://adamrb.github.io/"/>
  <updated>2013-10-18T21:48:24-04:00</updated>
  <id>http://adamrb.github.io/</id>
  <author>
    <name><![CDATA[Adam Boeglin]]></name>
    <email><![CDATA[adamrb@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Troubleshooting coldfusion when the instancemanager won't load.]]></title>
    <link href="http://adamrb.github.io/blog/2013/08/13/troubleshooting-coldfusion-when-the-instancemanager-wont-load/"/>
    <updated>2013-08-13T16:45:41-04:00</updated>
    <id>http://adamrb.github.io/blog/2013/08/13/troubleshooting-coldfusion-when-the-instancemanager-wont-load</id>
    <content type="html"><![CDATA[<p>I ran into a problem where I was unable to create new instances because the ColdFusion instance manager wouldn&rsquo;t load when I clicked link.</p>

<p><img src="https://teamworks.herffjones.com/ssg/SiteAssets/Documentation%20Wiki/Troubleshooting%20when%20the%20Instance%20Manager%20Won%27t%20Load/instance_manager.png" alt="instance_manager.png" /></p>

<p>It would just sit in a &ldquo;loading&rdquo; status.  Restarting the coldfusion9multi server didn&rsquo;t help.  Here&rsquo;s how to debug.</p>

<ul>
<li>Find the process id if the coldfusion instance manager</li>
<li>ps axu | grep cfusion | grep jrun | grep -v grep | awk &lsquo;{print $2}&rsquo;</li>
<li>Find all established connections from that process ID

<ul>
<li>lsof -P -n | grep $pid | grep ESTABLISHED</li>
</ul>
</li>
</ul>


<p><img src="http://www.adamrb.com/wp-content/uploads/2013/08/established_connections1.png" alt="established_connections" /></p>

<ul>
<li>Look for any established connections to the local IP that are duplicated or remain for more than a few seconds</li>
<li><p>Find the process using the port it&rsquo;s trying to connect to.  This should be another coldfusion process that (likely) unresponsive</p>

<ul>
<li>lsof -P -ni :2936</li>
<li>ps axu | grep $pid | grep -v grep
<img src="http://www.adamrb.com/wp-content/uploads/2013/08/blocking_connection1.png" alt="blocking_connection" /></li>
</ul>
</li>
<li><p>Kill that process</p></li>
<li>Repeat for any others</li>
</ul>


<p>Viola!  Your Instance Manager should now load again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Display Markdown Text in a termal]]></title>
    <link href="http://adamrb.github.io/blog/2013/03/05/display-markdown-text-in-termal/"/>
    <updated>2013-03-05T10:24:02-05:00</updated>
    <id>http://adamrb.github.io/blog/2013/03/05/display-markdown-text-in-termal</id>
    <content type="html"><![CDATA[<p>I really like the idea of Markdown text.  Being able to write in a natural format and then quickly convert to HTML (or a PDF) appeals to me in a way that is difficult to explain.  I thought that Latex would solve this need, but it&rsquo;s far too complex to use on a regular basis for simple documents.</p>

<p>Markdown does exactly what I want.  It&rsquo;s simple, easy to learn, natural syntax makes creating documentation a breeze.  I also want to be able to quickly display text in a terminal (because who wants formatting marks when you&rsquo;re actually trying to read something?).  There were a few solutions online, none of them I was happy with, so I&rsquo;ve chained a few tools together, threw it in a shell script and off we go.</p>

<ul>
<li><p><a href="http://daringfireball.net/projects/markdown/">Download Markdown.</a></p>

<ul>
<li>Copy Markdown.py to /usr/local/bin/Markdown</li>
</ul>
</li>
<li><p>Make sure you have w3m installed</p>

<ul>
<li>&lsquo;sudo apt-get install w3m&rsquo;</li>
</ul>
</li>
<li><p>Download this Gist and place it somewhere in your $PATH</p></li>
</ul>


<p>[inline]
[script src=&ldquo;<a href="https://gist.github.com/adamrb/5090451.js">https://gist.github.com/adamrb/5090451.js</a>&rdquo;][/script]
[/inline]</p>

<p>Doing so can quickly turn this:</p>

<p><em> <a href="http://www.adamrb.com/wp-content/uploads/2013/03/Selection_33c189b_20130305.png"><img src="http://www.adamrb.com/wp-content/uploads/2013/03/Selection_33c189b_20130305.png" alt="Selection_33c189b_20130305" /></a></em></p>

<p>To this:</p>

<p><a href="http://www.adamrb.com/wp-content/uploads/2013/03/Selection_c6e4a8b_20130305.png"><img src="http://www.adamrb.com/wp-content/uploads/2013/03/Selection_c6e4a8b_20130305.png" alt="Selection_c6e4a8b_20130305" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Parsing HP - RHEL System Information via SSH]]></title>
    <link href="http://adamrb.github.io/blog/2013/02/18/parsing-hp-rhel-system-information-via-ssh/"/>
    <updated>2013-02-18T22:41:54-05:00</updated>
    <id>http://adamrb.github.io/blog/2013/02/18/parsing-hp-rhel-system-information-via-ssh</id>
    <content type="html"><![CDATA[<p>I&rsquo;m often asked to give specifications quickly for systems I manage. I don&rsquo;t often know this off the top of my head&hellip; that&rsquo;s what computers are for.</p>

<p>This script assumes a few things:</p>

<ul>
<li>You are running the script against an HP system with hpacucli installed</li>
<li>It&rsquo;s running against RHEL 5 or 6.</li>
</ul>


<p>You can likely adapt it to fit your needs.  It&rsquo;s pretty simple, but gives a quick rundown of what most people ask about.
Here&rsquo;s the output:</p>

<pre><code>`System Info
---------------
Model Name: ProLiant DL380 G6`

CPU Info
---------------
Model Name: Intel(R) Xeon(R) CPU E5540 @ 2.53GHz
Physical CPUs: 2
Cores per CPU: 4
Total Processing Cores: 8
Total Threads (including HT): 16




Memory Info
----------------
Installed Memory: 72 GB
Total Memory Slots: 18
Memory Type: DDR3
Memory Speed: 1333 MHz
Memory Size(s):
4096 MB (18)




Disk Info
---------------
array A (SAS, Unused Space: 0 MB)
logicaldrive 1 (136.7 GB, RAID 1, OK)
physicaldrive 1I:1:1 (port 1I:box 1:bay 1, SAS, 146 GB, OK)
physicaldrive 1I:1:2 (port 1I:box 1:bay 2, SAS, 146 GB, OK)
array B (SAS, Unused Space: 0 MB)
logicaldrive 2 (279.4 GB, RAID 1, OK)
physicaldrive 2I:1:5 (port 2I:box 1:bay 5, SAS, 300 GB, OK)
physicaldrive 2I:1:6 (port 2I:box 1:bay 6, SAS, 300 GB, OK)




Software Information
---------------
Operating System: Red Hat Enterprise Linux Server release 6.3 (Santiago)
</code></pre>

<p>And here&rsquo;s the script:</p>

<p>[gist id=&ldquo;4982876&rdquo;]</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Progression of a Smartphone Geek]]></title>
    <link href="http://adamrb.github.io/blog/2010/10/12/progression-of-a-smartphone-geek/"/>
    <updated>2010-10-12T13:31:33-04:00</updated>
    <id>http://adamrb.github.io/blog/2010/10/12/progression-of-a-smartphone-geek</id>
    <content type="html"><![CDATA[<p>It&rsquo;s come to my attention that I&rsquo;ve owned a lot of smartphones in my day.  I&rsquo;ve decided to chronicle my journey.</p>

<h2>HP Jornada 545 + Kyocera 2135:</h2>

<p><a href="http://picasaweb.google.com/lh/photo/1C3n5p4lJHlrnv1XobVDTg?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3gQoBnfI/AAAAAAAAB_w/zbC2dwghd08/s800/jornada_545.jpg" alt="" /></a> <a href="http://picasaweb.google.com/lh/photo/a6wHLUATfnJx9yHxVVawXw?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TMHCCbWNr_I/AAAAAAAACAY/q8uY9Q6Pjrs/s288/kyo2135.jpg" alt="" /></a>
While not technically a smart phone, this was my first PDA.  I also carried around a cheap Kyrocera phone as my first cell phone.</p>

<p>It had a color screen, and I could keep track of my calendar and contacts in a single location.  There were a few productivity apps on it, and I could surf the web when it was docked to my computer.</p>

<p>This is what got me hooked on PDA&rsquo;s</p>

<p>OS:  PocketPC 2000
Processor: 133Mhz
Storage: 16MB
RAM: 16MB</p>

<h2>Kyocera 6035: (2001)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/ebkyhRqobKAMsStcyQCW-w?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3gazxKCI/AAAAAAAAB_0/zTKE_Zjc8sk/s400/Kyocera%206035.jpg" alt="" /></a>
This was my first smartphone or &ldquo;pda phone&rdquo; as they were called.</p>

<p>It was monochrome and used the PalmOS.  The front number pad flipped down, to allow a full stylus enabled touch screen.</p>

<p>While it wasn&rsquo;t very &ldquo;cool&rdquo;, I could do basic calendaring and task management.  It has a few games and a WEP enabled web broswer where the airtime usage came out of my minutes.  I had an external fold out keyboard I used to take notes in class.</p>

<p>I could even play a copter/cave game on it.</p>

<p>Because it was so low powered, the battery life was amazing.  It rivaled even today&rsquo;s feature phones.</p>

<p>OS:  PalmOS
Processor: ??
Storage: 8MB</p>

<h2>Samsung SPH-i700: (2003)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/ouIgDa2rifkqCEMaJYSIVQ?feat=embedwebsite"><img src="http://lh3.ggpht.com/_bIFVdIBoxQM/TLX3g0c6E3I/AAAAAAAACAA/VP2z6NMKSO0/s800/Samsung_i700.jpg" alt="" /></a>
My second smart phone was the samsung i700.</p>

<p>This was my first Windows Mobile smartphone.   While it didn&rsquo;t have nearly the battery life of the Kyocera, it was far more powerful.  It had a color screen with a &ldquo;real&rdquo; operating system, and even a camera!  I thought the camera design was brilliant at the time, you could swivel it to take pictures or video of yourself, or turn it forward to take normal camera shots.</p>

<p>It also had a built in IE webbrowser.  While it wasn&rsquo;t very good, it was useful for looking up information like movie times and weather.</p>

<p>OS:  Windows Mobile 2003
Processor: 300Mhz
Storage: 16MB
RAM: 16MB</p>

<h2>Samsung i730: (2004)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/r2U4KYv_wYV8r5hXcYo5kg?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3hV0NzFI/AAAAAAAACAE/OxG1INi8RX0/s800/Samsung_i730.jpg" alt="" /></a>
I bought the i730 the day it came out (and thus started my desire to always have the best smartphone available)</p>

<p>It was a really nice phone.  The battery life wasn&rsquo;t great, but I was used to it by then.  I loved the slide up keyboard, I could easily type with one hand and then get it out of the way.</p>

<p>The screen was smaller than the i700, but that was fine because it no longer looked like I was holding a brick to my face when I talked on it.  It didn&rsquo;t, however, have a camera.  I believe this was when I bought my digital camera w/ bluetooth connectivity to make up for it.</p>

<p>This was also my first 3G (EVDO) smartphone.</p>

<p>OS:  Windows Mobile 2003 2nd Edition
Processor:  520Mhz
Storage:  128MB w/ expandable SD card
RAM: 64MB</p>

<h2>Kyocera 7135: (2006)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/AbxrZ_tGQVYcMHanUINomw?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3glkALKI/AAAAAAAAB_4/qJajc96AAVg/s400/Kyocera_7135.jpg" alt="" /></a>
I was forced to use the Kyocera 7135 as a work phone when I got a new job.  This was a serious downgrade form my i730, as it was only a generation higher than my first smartphone (the 6035).</p>

<p>At this point, I seriously disliked the PalmOS, and while the battery life was respectable, I couldn&rsquo;t really do anything on it other than calendaring and contacts.</p>

<p>OS:  PalmOS
Processor: 33mhz
Storage: 16MB</p>

<h2>Samsung i760: (2007)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/MsKLdvz51UVPIuJx3KMFQg?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3isi05kI/AAAAAAAACAI/fUb6YF96WXw/s288/Samsung_i760.jpg" alt="" /></a>
I was looking to upgrade my i730 to something faster and with better memory when the i760 came out.</p>

<p>In hindsight, it was only an incremental upgrade to the i760, but it looked far more like a modern phone. and I finally had a solution to get my email &ldquo;pushed&rdquo; to my phone instead of it having to poll the server for updates.</p>

<p>Windows Mobile 6 was getting to be quite popular around this time, so I had no trouble finding apps and games for the OS.</p>

<p>OS:  Windows Mobile 6
Processor:  400Mhz
Storage:  128MB w/ expandable MicroSD card
RAM: 64MB</p>

<h2>Treo 650: (2007)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/cJ6ZQeDzoVvMIF0rca5UDQ?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3i_7LbXI/AAAAAAAACAQ/PxX74bkeiTQ/s400/Treo_650.jpg" alt="" /></a>
I finally was able to upgrade my work phone to something that was at least tolerable.</p>

<p>The Treo 650 was another hand-me-down.  But it had a nice color screen, a decent processor, and a few nice productivity apps.  It still didn&rsquo;t get much use, as the i760 was my primary phone.</p>

<p>OS:  PalmOS
Processor:  312Mhz
Storage:  32MB</p>

<h2>HTC Touch Pro: (2008)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/KxsEBOZvMTi8CIWyYWWDOA?feat=embedwebsite"><img src="http://lh5.ggpht.com/_bIFVdIBoxQM/TLX3iiVRRfI/AAAAAAAACAM/7Mg4hyy2Jyw/s400/Touch_Pro.jpg" alt="" /></a>
The Touch Pro was another incremental improvement over the i760.  At this point, I was loosing hope that I&rsquo;d ever have a phone as cool or fast as the iPhone on Verizon&rsquo;s network.</p>

<p>The touch pro was nice phone.  The processor was fast enough that you can browse the web at 3G speeds without too much difficulty (especially with the Skyfire Browser).   This was also the first phone I could really install custom ROMs on and customize to my liking.</p>

<p>HTC also had a nice interface that made the Windows Mobile OS seem far less bland than it had gotten over the years.  However, it was still a windows mobile phone underneath.</p>

<p>OS:  Windows Mobile 6.1
Processor:  528Mhz
Storage:  328MB w/ expandable MicroSD card
RAM: 128MB</p>

<h2>Motorola Droid: (2009)</h2>

<p><a href="http://picasaweb.google.com/lh/photo/llGO5OUhgNodyseVbAa2wQ?feat=embedwebsite"><img src="http://lh4.ggpht.com/_bIFVdIBoxQM/TLX3g1I7EiI/AAAAAAAAB_8/mFjmE6nqg4U/s400/Motorola_Droid.jpg" alt="" /></a>
When I first heard Google was building a phone OS, I thought &ldquo;cool, I hope it takes off&rdquo;.  When the Droid was announced, I knew I immediately had to have one.</p>

<p>This was (and continues to be) the greatest phone I have ever owned.  It had turn-by-turn navigation, a great app marketplace,  and an unlocked and fully customizeable OS.  This was the first phone I owned that didn&rsquo;t have a reset button built into it because the OS was stable enough to not lock up on a semi-weekly basis.  It was also the first phone I owned without touch screen that required a styuls.</p>

<p>The Droid has me thoughoughly hooked on the Android operating system.  Not only is it geek friendly, it&rsquo;s good enough for the average person.  I recommend it to anyone looking for a smartphone.</p>

<p>OS: Android 2.2
Processor:  550Mhz
Storage:  256MB w/ expandable MicroSD card
RAM: 256MB</p>

<h2>What&rsquo;s next?</h2>

<p>So what&rsquo;s coming next?</p>

<p>I&rsquo;m currently waiting for my &ldquo;super phone&rdquo; as I call it.  It will be built on android, but I want it to have an impressive performance increase over my previous phones.  All of my WinMo phones were just slight improvements over each other.  My next phone will likely have a 4.2&#8221; screen, dual core (tegra?) processor, more than 512MB of RAM, a few gigabytes of built in storage, and a forward facing camera.  All this in addition to 4G (LTE) data reception.</p>

<p>While there aren&rsquo;t any devices on the market that fit my requirements yet, there are a few to be rumoured in the works.  I&rsquo;ve always longed for a computer in my pocket (or rather, on my hip), with today&rsquo;s technology dream is very close to becoming a reality.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jump to Conclusions App]]></title>
    <link href="http://adamrb.github.io/blog/2010/07/30/jump-to-conclusions-app/"/>
    <updated>2010-07-30T13:00:30-04:00</updated>
    <id>http://adamrb.github.io/blog/2010/07/30/jump-to-conclusions-app</id>
    <content type="html"><![CDATA[<p>Anyone who knows me, knows I have a certain obsession with the movie office space. I have a few red Swingline staplers, Initech coffee mugs, and various T-Shirts.</p>

<p>I decided that I was in need of a &ldquo;Jump to Conclusions&rdquo; app for my phone (for those difficult decisions). If you don&rsquo;t know what this is, it&rsquo;s based on the Jump to Conclusion mat described by Tom Smykowski as a &ldquo;Mat that you put on the floor, that has different &#8220;conclusions&rdquo; written on it that you can &ldquo;jump&rdquo; to&#8221;.</p>

<p>While some claimed it was a horrible idea, Tom went ahead with it and built a prototype.
<a href="http://cms.home.adamrb.com/wp-content/uploads/2010/07/mat.png"><img src="http://cms.home.adamrb.com/wp-content/uploads/2010/07/mat.png" alt="mat" /></a></p>

<p>I followed his design to build my Android application.
<a href="http://cms.home.adamrb.com/wp-content/uploads/2010/07/app.png"><img src="http://cms.home.adamrb.com/wp-content/uploads/2010/07/app.png" alt="Jump to Conclusions App" /></a></p>

<p>Similar to the mat, you open the app, hold the phone in your hand, and jump to conclusions. It will give you a random conclusion every time.</p>

<p>I&rsquo;ve published it in the play store: <a href="https://play.google.com/store/apps/details?id=com.initech.mats">https://play.google.com/store/apps/details?id=com.initech.mats</a></p>

<p>I&rsquo;m quite happy with the results.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iRex Reader 1000]]></title>
    <link href="http://adamrb.github.io/blog/2008/09/19/irex-reader-1000/"/>
    <updated>2008-09-19T09:42:00-04:00</updated>
    <id>http://adamrb.github.io/blog/2008/09/19/irex-reader-1000</id>
    <content type="html"><![CDATA[<p>Details are starting to emerge about iRex&rsquo;s new reading device lineup.</p>

<p>There will be 3 10.2 ince devices.  One base model, one with the touch screen, and the third with wifi, bluetooth, and 3g.</p>

<p>This is exciting news.  I&rsquo;ve always wanted the iLiad to be a little bit bigger.  I mostly use mine for business purposes (notes in meetings, reading documents, etc).  A bigger screen will be great for a paper alternative.  Especially if the device will be able read more documents natively.</p>

<p>It&rsquo;ll be interesting to see the device and user interface.  I assume they&rsquo;re going to use the same software for the touchscreen and non touchscreen versions.  Maybe they will have more buttons and a scroll wheel like the kindle, or maybe use context menus like the cybook.  Time will tell.</p>

<p>I do know for sure that I intend to buy the top level unit with all the bells and whistles.  I&rsquo;ll have to start saving now though&hellip; I do intend to keep developing and porting for the platform.  This is going to be an exciting time.</p>

<p>A quick overview of what we know:</p>

<ul>
<li>Name: iRex Reader 1000</li>
<li>10.2 Inch Screen</li>
<li>eBook (Mobipocket?), PDF, Word, and html support (probably others)</li>
<li>Stylus input (wacom?)</li>
<li>60-70 hour battery life</li>
<li>3 Versions</li>
<li>Base &ndash; $650</li>
<li>Touch Screen &ndash; $750</li>
<li>Touchscreen + Bluetooth, Wifi, and 3G, $850</li>
<li>16 levels of greyscale</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iLiad traveling to Germany]]></title>
    <link href="http://adamrb.github.io/blog/2008/02/22/iliad-traveling-to-germany/"/>
    <updated>2008-02-22T08:35:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/02/22/iliad-traveling-to-germany</id>
    <content type="html"><![CDATA[<p>I&rsquo;ll be difficult, but I think I&rsquo;ll manage.  I&rsquo;ll be without my iLiad for at least the next week.  It&rsquo;s going in for the battery replacement program, and I&rsquo;ve opted for the upgraded backplane.  It&rsquo;s great that an early adopter will be able to have what is basically a 2nd edition iLiad.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Midori/WebKit iLiad Beta Release]]></title>
    <link href="http://adamrb.github.io/blog/2008/02/21/first-midoriwebkit-iliad-beta-release/"/>
    <updated>2008-02-21T15:27:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/02/21/first-midoriwebkit-iliad-beta-release</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve created an early beta release for my port of the <a href="http://webkit.org/">Webkit</a> based <a href="http://software.twotoasts.de/?page=midori">Midori</a> internet browser.</p>

<p>There are quite a few <a href="https://dev.mobileread.com/iliad/webkitbrowser/query">bugs that need to be worked out</a> before it&rsquo;s ready for the average user, but it works well enough as a tech demo.</p>

<p>You can see some screenshots below:</p>

<p><a href="http://3.bp.blogspot.com/_bIFVdIBoxQM/R73f-foiXaI/AAAAAAAAAwE/DfFOkWF6l90/s1600-h/midorilauncher.png"><img src="http://3.bp.blogspot.com/_bIFVdIBoxQM/R73f-foiXaI/AAAAAAAAAwE/DfFOkWF6l90/s400/midorilauncher.png" alt="" /></a></p>

<p><a href="http://2.bp.blogspot.com/_bIFVdIBoxQM/R73gIPoiXbI/AAAAAAAAAwM/Ya4KYHKnTa0/s1600-h/webkitorg.png"><img src="http://2.bp.blogspot.com/_bIFVdIBoxQM/R73gIPoiXbI/AAAAAAAAAwM/Ya4KYHKnTa0/s400/webkitorg.png" alt="" /></a></p>

<p><a href="http://1.bp.blogspot.com/_bIFVdIBoxQM/R73gO_oiXcI/AAAAAAAAAwU/Pt9AjX7TbRc/s1600-h/midoribeta.png"><img src="http://1.bp.blogspot.com/_bIFVdIBoxQM/R73gO_oiXcI/AAAAAAAAAwU/Pt9AjX7TbRc/s400/midoribeta.png" alt="" /></a></p>

<p>If you&rsquo;d like to try it, you can download the first beta here: <a href="https://dev.mobileread.com/dist/AdamB/webkitbrowser/midori.zip">Midori Beta 1</a></p>

<p>You will need developer access on your iLiad to launch it.  You&rsquo;ll also need to start an internet connection with another script.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a better web browser]]></title>
    <link href="http://adamrb.github.io/blog/2008/02/14/building-a-better-web-browser/"/>
    <updated>2008-02-14T08:44:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/02/14/building-a-better-web-browser</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t know why, but I&rsquo;ve decided I really want a good, working, web browser on the iLiad.  Maybe it&rsquo;s Kindle envy, maybe I spend too much time porting when I should be working, who knows.</p>

<p>WebKit seems to be all the rage these days.  They have builds of it for just about every platform, and the iPhone has really brought it into the mainstream.  So my goal is to port WebKit to the iLiad and provide a useful interface for browsing.</p>

<ul>
<li>It must be able to use the pagebar to page up and down.</li>
<li><p>Screen refreshes must not be obtrusive, and should be responsive. (Native refreshes only, no hacked libX11)</p></li>
<li><p>Support for Bookmarks and Recent URL&rsquo;s.</p></li>
<li>Easy to install package that can run from anywhere.
WebKit is compiling now.  Next, I&rsquo;ll build Epiphany and use the webkit core.  As long as that goes smoothly, I can work on refreshes and the rest of the application.  Wish me luck&hellip;</li>
</ul>


<p>Edit: I think I found a better front end than Epipany.  <a href="http://software.twotoasts.de/?page=midori">Midori</a> is much smaller and more light weight than Epiphany.  It should be able to do everything required and be relatively quick on the iLiad.</p>

<p>I had Midori up and running with the Webkit backend, but nothing would display because WebKit was made to work with gtk 2.8, and the iLiad has 2.6.  I believe I&rsquo;ve found a patch, so I&rsquo;m recompiling (takes about 2 hours on my dev pc).  Hopefully I should have an early working application soon&hellip;.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finally!: Integrated FBReader 0.8.14 with ePub and Registry Support]]></title>
    <link href="http://adamrb.github.io/blog/2008/02/12/finally-integrated-fbreader-0-8-14-with-epub-and-registry-support/"/>
    <updated>2008-02-12T10:11:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/02/12/finally-integrated-fbreader-0-8-14-with-epub-and-registry-support</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been about 6 months since my last port of FBReader.  The talented FBReader developers have done a lot.  The most important addition is the support for ePub books.  You can view the full changelog at <a href="http://www.fbreader.org/">FBReader.org</a>.</p>

<p>I, myself, have done a lot of things different for this release as well.</p>

<ul>
<li>I&rsquo;ve removed the FBReader toolbar, and thus, disabled the internal library.

<ul>
<li>This was mostly done to speed up porting time.  With the library removed, much less needed to be done to the code of the program to port it.</li>
<li>All refreshes are done internally.  No hacked libX11 is used!</li>
</ul>
</li>
<li>By default, FBReader will add supported file extensions to the registry

<ul>
<li>This makes FBReader act like any other viewer on the iLiad.</li>
<li>FBReader settings and configuration will be saved to /mnt/settings so a software update should not erase them.</li>
</ul>
</li>
<li>The installer no longer requires a memory card, and will be installed to internal memory.

<ul>
<li>The internal memory of the iLiad has 7.8MB free after installing FBReader.  It should not interfere with anything else installed internally.</li>
</ul>
</li>
</ul>


<p>Based on a support thread I made, file extensions supported are:</p>

<ul>
<li>chm</li>
<li>rtf</li>
<li>oeb</li>
<li>opf</li>
<li>epub</li>
<li>fb2</li>
<li><p>tcr
Because the toolbar is gone, most of the important functions can now be accessed by the hardware buttons:</p></li>
<li><p>Upper Left/Quit Button</p>

<ul>
<li>Will cancel out of TOC screen, and will quit when inside the book.</li>
</ul>
</li>
<li>Page Bar Forward

<ul>
<li>Short Press

<ul>
<li>Next Page</li>
</ul>
</li>
<li>Long Press

<ul>
<li>Redo</li>
</ul>
</li>
</ul>
</li>
<li>Page Bar Backward

<ul>
<li>Short Press

<ul>
<li>Previous Page</li>
</ul>
</li>
<li>Long Press

<ul>
<li>Undo</li>
</ul>
</li>
</ul>
</li>
<li>Up Arrow

<ul>
<li>Short Press

<ul>
<li>Previous TOC Section</li>
</ul>
</li>
<li>Long Press

<ul>
<li>Increase Font Size</li>
</ul>
</li>
</ul>
</li>
<li>Dot or &ldquo;Enter&rdquo; Button

<ul>
<li>Short Press

<ul>
<li>Show Table of Contents</li>
</ul>
</li>
<li>Long Press

<ul>
<li>Rotate Page</li>
</ul>
</li>
</ul>
</li>
<li>Down Arrow

<ul>
<li>Short Press

<ul>
<li>Next TOC Section</li>
</ul>
</li>
<li>Long Press

<ul>
<li>Decrease Font Size</li>
</ul>
</li>
</ul>
</li>
</ul>


<p>Installation of this is simple.  You&rsquo;ll need firmware 2.12 and Developer Shell access.  Unzip the file, and copy anywhere on your iLiad.  You will need to restart your iLiad when it prompts you.  After you&rsquo;ve restarted, you can delete the installation directory.</p>

<p><strong>There will be no icon to run FBReader, you&rsquo;ll need to select a book from the contentlister with one of the file extensions listed above.</strong></p>

<p>Supported books will have a valid icon.</p>

<p>You can find the release and discussion at MobileRead: <a href="http://www.mobileread.com/forums/showthread.php?t=20490">http://www.mobileread.com/forums/showthread.php?t=20490</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iRex Moving Forward with Community Project]]></title>
    <link href="http://adamrb.github.io/blog/2008/01/18/irex-moving-forward-with-community-project/"/>
    <updated>2008-01-18T08:02:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/01/18/irex-moving-forward-with-community-project</id>
    <content type="html"><![CDATA[<p>You may have seen <a href="http://forum.irexnet.com/viewtopic.php?t=2051">a post on the iRex forums </a>about community development.</p>

<p>Basically, iRex is trying to open up the iLiad as a development platform simlar to that of the <a href="http://www.maemo.org/">Nokia Tablets.</a>  Nokia&rsquo;s internet tablet platform is very popular because of the great documentation Nokia provides, the openness of the platform itself, and the ease that users can download and install new programs on their tablets.  I&rsquo;d like to see the same thing happen to the iLiad.</p>

<p>In the<a href="http://forum.irexnet.com/viewtopic.php?p=10982#10982"> most recent post by Karel</a>, he&rsquo;s asking for those willing to take a more active role in the proposed community to email him.  I have done so, and plan to help bring this community to life.  Right now, iLiad development is unorganized, and difficult for a new user to get into.  Hopefully, with iRex&rsquo;s help, we can overcome that.</p>

<p>I&rsquo;m going to lay out a few things that I think the iLiad and community need.</p>

<ul>
<li>Installation

<ul>
<li>Right now, it&rsquo;s very difficult for a user to install a 3rd party application.  They have to request shell access, find the program they want to install.  Download and unzip it, then run it on the iLiad.  This can be confusing, and can cause many problems along the way.</li>
<li>There could be a few ways to solve this.  The new community can have a page with tested and working applications.  The user can sign into that page with their myIrex username/password, select the application and have it downloaded via the IDS.</li>
<li>Or, there can be a program like that on the iPhone, where the application connects to a list of feeds and displays a list of available apps to the user with a one-click installation method.</li>
<li>Lastly, there&rsquo;s the more crude, but effective method of supporting ipkg through the contentlister.  The user downloads the ipk from a website, copies it to the iLiad, and it installs with a single click.

<ul>
<li>All of the above methods would require some intervention from iRex, either with the website, or changes to the internal software.</li>
</ul>
</li>
</ul>
</li>
<li>Adding new viewers

<ul>
<li><p>There needs to be a better way to add and remove new viewers and supported formats to the contentlister.  Right now, one needs to use a sed script to modify the registry.  This can be prone to errors and removing afterward is very difficult.</p>

<ul>
<li>I thing that  new directory for &ldquo;Plugins&rdquo; should be added.</li>
<li>The package installer can copy an xml (or any other file) into that directory with the extension supported being the file name.</li>
<li>Inside the XML file, the program that is used to read the file will be listed, along with the icon to be used.

<ul>
<li>For epub for example.</li>
<li><p>\mnt\setttings\registry\plugins\epub.xml
                                 epub.xml:<br/>
<code>                                             /usr/local/bin/FBREADER  
                               /usr/local/share/icons/epub.png</code></p></li>
<li><p>It could be as simple as that.  This way, if you have two different programs that support epub, you can overwrite the existing configuration with that of the new program.  This wouldn&rsquo;t change the registry in any way, and if an error occured, the contentlister could ignore the plugins directory the next time it launched.</p></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>Screen Refreshes!

<ul>
<li>Right now, the biggest problem with porting any application is getting the screen refreshes.  If this could somehow be made easier for developers, I think that the iLiad would have an influx of new applications available for it.  Could this be added to GTK within the iLiad?  This way the application would work as normal, and GTK would refresh when everything was done being painted.<br/>
For the end user:</li>
</ul>
</li>
<li>Documentation, Code, Website enhancements

<ul>
<li>This new site is going to need to be well organized and provide lots of information.  I can think of a few things it&rsquo;ll need.

<ul>
<li>A way to track ongoing ports and their status</li>
<li>A bounty system for users to request new applications</li>
<li>Documentation on internal iLiad functions</li>
<li>Open source the UI compontents, ContentLister, note application, browser app, etc
This is just a small list.  I think that there&rsquo;s a lot of potential for the iLiad that&rsquo;s not being realized.  I hope this new initiative can solve that.</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FBReader port coming along nicely]]></title>
    <link href="http://adamrb.github.io/blog/2008/01/14/fbreader-port-coming-along-nicely/"/>
    <updated>2008-01-14T16:14:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/01/14/fbreader-port-coming-along-nicely</id>
    <content type="html"><![CDATA[<p>My port of FBReader 0.8.10 is coming along very nicely.  I&rsquo;ve decided to go ahead with the limited functionality idea in order to speed up porting, and make it act more like a native iLiad application.</p>

<p>You can see what&rsquo;s happening in the screenshot below:<br/>
<a href="http://4.bp.blogspot.com/_bIFVdIBoxQM/R4vTPfXB2wI/AAAAAAAAAu8/AVKz0LbitRg/s1600-h/fbreaderepub.png"><img src="http://4.bp.blogspot.com/_bIFVdIBoxQM/R4vTPfXB2wI/AAAAAAAAAu8/AVKz0LbitRg/s400/fbreaderepub.png" alt="" /></a></p>

<p>FBReader is shown reading and epub book downloaded from <a href="http://www.feedbooks.com/">feedbooks.com</a>.</p>

<p>As you can see, it have FBReader start in full screen mode.  This hides the unnecessary toolbars.<br/>
It gives you a status indicator, page count, and clock that will updates as you turn the page.  Right now, it takes about 2.5 seconds to refresh.  This is a little better than the older version.  I&rsquo;m hoping to <a href="http://groups.google.com/group/fbreader/browse_thread/thread/9ec257664a7b7cc6">increase the speed even further</a>.</p>

<p>There are a few functions that can be used with key shortcuts:</p>

<ul>
<li>Upper Left Button: Closes FBReader</li>
<li>Page Forward/Backword</li>
<li>Up &amp; Down arrows short: Increase and Decrease Font</li>
<li>Dot Button: Go to the beginning of the document</li>
<li>Up &amp; Down arrows Long Press: Next and Previous Table of Content Section</li>
<li>Dot Button Long Press: Open Table of Contents
There are a few things left to do before I can publish the port.  I&rsquo;d like to save the configuration to /mnt/settings so that it won&rsquo;t be lost when you perform an OS upgrade.  Also, I need to create and test the installation package.  I&rsquo;ve reduced the file size enough so that it can easily reside on the internal memory (I think the package takes up about 2.5MB, I may be able to shrink it further).</li>
</ul>


<p>I&rsquo;m thinking about preparing a short video demonstrating FBReader and the FeedBooks.com iNewsStand application.  These two programs really show off the iLiad&rsquo;s potential and flexibility.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Idea: FBReader - Limited iLiad Edition]]></title>
    <link href="http://adamrb.github.io/blog/2008/01/08/idea-fbreader-limited-iliad-edition/"/>
    <updated>2008-01-08T17:07:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/01/08/idea-fbreader-limited-iliad-edition</id>
    <content type="html"><![CDATA[<p>I&rsquo;m getting ready to start my port of FBReader 0.8.10 with epub support.  I can easilly get this working on the iLiad, however I want to speed up the screen refreshes by using only native refresh calls.  The problem is that in order to get these refreshes to work in the options dialog and FBReader library, a lot of time consuming manual test &amp; check work is required.</p>

<p>I had a thought about limiting the features of FBReader and making it look and act more like a native iLiad viewer.  I think that if I completely disabled the top navigation bar, set the appropriate key bindings, and forced the user to launch all books directly from the contentlister, it would actually significantly decrease the amount of time it would take to release the port.</p>

<p>I know that some users do like the Library function of FBReader, but for those who don&rsquo;t know or need it, this would be an ideal solution.  I may also be able to decrease the size of the binary and libraries, to allow it to be installed on the internal memory of the iLiad.</p>

<p>I need to get Shell access back, and do some testing.  But unless I hear too many complains, I&rsquo;m going to go forward with this (at least until I can devote more time to a full port).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Years Status Update]]></title>
    <link href="http://adamrb.github.io/blog/2008/01/07/new-years-status-update/"/>
    <updated>2008-01-07T14:10:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2008/01/07/new-years-status-update</id>
    <content type="html"><![CDATA[<p>I haven&rsquo;t been active very much on my blog or the forums recently, but I&rsquo;m still around.</p>

<p>It&rsquo;s been crazy at work and home the last few weeks.  I haven&rsquo;t had a spare minute to do any porting in a while.  Rest assured, I still plan to release a new port of FBReader with epub support.  However, getting time to do it has been pretty difficult.  All should calm down by next week, so hopefully I can put in some real effort in then.  I might try to time it with the 2.12 software release. ;)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Un-Brick your iLiad]]></title>
    <link href="http://adamrb.github.io/blog/2007/12/14/how-to-un-brick-your-iliad/"/>
    <updated>2007-12-14T12:59:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/12/14/how-to-un-brick-your-iliad</id>
    <content type="html"><![CDATA[<p>So you&rsquo;ve gotten brave with programming on your iLiad.  You like to dig into the internals and write some scripts.  Maybe for <a href="http://www.mobileread.com/forums/showthread.php?t=12666&amp;highlight=comic">automatically downloading comics</a> or an <a href="http://www.mobileread.com/forums/showpost.php?p=77260&amp;postcount=35">MP3 Player from the contentlister</a>.  But something went wrong, and now your iLiad won&rsquo;t boot.  Don&rsquo;t worry, it happens.  I&rsquo;ve had to reflash a few times myself.  As long as you have firmware 2.11 and the developer package from iRex, you should be able to recover from most problems.</p>

<p>I should note that I said should.  There are some things you can do to your iLiad that could cause problems that the reflash option won&rsquo;t fix.  The most important, is working with the embedded flash.  This includes the boot loader and the waveform.  Flashing these (you must use a special command), could cause your iLiad to be unusable.  But other than that, you should be fine to replace the Kernel, Initrd, and the root filesystem.</p>

<p>So lets get started.  Here&rsquo;s what you need to perform a reflash:</p>

<ul>
<li>A Compact Flash (CF) card.  Other types of cards simply will not work.  They&rsquo;re cheap, and easily obtainable.  Go out and buy one.</li>
<li>You will need to have firmware 2.11 with the Developer Package requested from iRex&rsquo;s site (<a href="http://blog.adamrb.com/2007/12/so-you-want-to-try-your-first-3rd-party.html">See this post for details</a>).</li>
<li><p>The <a href="https://myirex.irexnet.com/user.php/attachments">cf-card-contents.zip file from the attachments link on your MyiRex account page</a>.
Alright, so you&rsquo;ve followed the <a href="http://blog.adamrb.com/2007/12/so-you-want-to-try-your-first-3rd-party.html">instructions on getting the developer package</a>, and you want to be sure that you are able to reflash before you break anything. Here&rsquo;s what you need to do.</p></li>
<li><p> Make sure your iLiad is powered off, with nothing on the screen.</p></li>
<li> Hold the connect button in the upper right hand corner of your iLiad.</li>
<li> While holding the button, press the power switch on the bottom.</li>
<li> Count to Five while continuing to hold the button.</li>
<li> Release the connect button.
You should see the boot image appear.  After a second or two, the whole screen will flash white, and it will start to boot normally.  Congratulations!  Your iLiad is able to be reflashed.  You should have no fear for working in the root filesystem.</li>
</ul>


<p>Now, lets go through the steps you&rsquo;ll need to actually perform the reflash.</p>

<ol>
<li> Unzip the cf-card-contents.zip.</li>
<li> You should see a folder called &ldquo;images&rdquo; and a file called &ldquo;config.txt&rdquo;</li>
<li> Copy these to the root of your memory card. (Not inside any other folders)</li>
<li>For example.  If on your windows computer, your memory card is drive &ldquo;E:&rdquo;, you should have E:\images and E:\config.txt</li>
<li>Unmount your memory card and insert it into your iLiad.</li>
<li>Make sure your iLiad is powered off, with nothing on the screen.</li>
<li>Hold the connect button in the upper right hand corner of your iLiad.</li>
<li>While holding the button, press the power switch on the bottom.</li>
<li>Count to Five while continuing to hold the button.</li>
<li>Release the connect button.
You will see it going through steps that are very similar to updating the firmware on your device.  It will reboot at the end and bring you back to the main screen.  Performing this method, you shouldn&rsquo;t loose any of the files on your internal memory.  But it&rsquo;s always good to make a backup just in case.</li>
</ol>


<p>You can find <a href="http://adamrb.googlepages.com/ReflashfromCFhowto.pdf">more detailed information in this pdf</a>.  But the above guide should help most users who need to unbrick their iLiad.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So you want to try your first 3rd party program?]]></title>
    <link href="http://adamrb.github.io/blog/2007/12/13/so-you-want-to-try-your-first-3rd-party-program/"/>
    <updated>2007-12-13T13:00:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/12/13/so-you-want-to-try-your-first-3rd-party-program</id>
    <content type="html"><![CDATA[<p>So you just got your brand new iLiad, or maybe you&rsquo;ve had it for a while but have grown comfortable enough that you&rsquo;d like to install one of the community applications.  Below, I&rsquo;ll detail a step by step guide on how to setup your iLiad to install a new application to it.</p>

<p>First, a few notes:  You&rsquo;ve paid a lot for your iLiad and you don&rsquo;t want to break it.  This fact alone prevents a lot of people from trying out new programs.  There is good news though.  If something should happen while installing or running an application.  You should be able to restore your iLiad.  You will need a compact flash (CF) card.  I recommend anyone who&rsquo;s planning to install community applications to buy a CF card.  You can pick up a 1 Gigabyte card at any electronics store for under $30 US.  You should place all of your applications, along with the files needed to do a reflash should anything go wrong.</p>

<p>This guide is extremely detailed.  It&rsquo;s actually a lot easier than it looks.</p>

<p>With that out of the way, lets get started:</p>

<ol>
<li> The first thing you will need to do is connect to IDS.  To do this, you will need either a wired, or wireless network connection.

<ol>
<li>Create an IDS profile here: <a href="https://myirex.irexnet.com/user.php/createuser">https://myirex.irexnet.com/user.php/createuser</a></li>
<li>Fill in your e-mail address in the field and click on &lsquo;Send&rsquo;.</li>
<li>You will receive an automatic e-mail with a password in your e-mail inbox.</li>
<li>Take your iLiad and enter your e-mail address and the password you received into the &lsquo;iLiad Settings&rsquo;.</li>
<li>Create a (wired or wireless) network profile on your iLiad using the Wizard.</li>
<li>You can now connect to the iDS by pressing the connect key on your iLiad for 2 seconds.</li>
</ol>
</li>
<li> Once you see your iLiad connect, it should tell you that there&rsquo;s either nothing to download, or it will install any updates it finds.</li>
<li> Now you will need to sign up for the developer package.  This will give you the ability to run programs, and will also program your iLiad with what you need to reflash it from a CF card in case something goes wrong.

<ol>
<li>To sign up for the developer package visit this page: <a href="https://myirex.irexnet.com/user.php/developer">https://myirex.irexnet.com/user.php/developer</a></li>
</ol>
</li>
<li>If you&rsquo;ve successfully connected to IDS in the past, your MAC address should appear in the &ldquo;Select MAC Address&rdquo; drop down box.</li>
<li>If it does not appear, verify your email address and password in the settings screen on your iLiad, and connect to the IDS again.</li>
<li>After you have selected your MAC address, click &ldquo;Send Developer Package&rdquo;.</li>
<li>Now, connect to the IDS on your iLiad.  You should see a message saying &ldquo;Downloading Developer Package&rdquo;.</li>
<li>After it installs, your iLiad should automatically reboot.</li>
<li><p>Now that your iLiad has rebooted, it should start up like normal, but you won&rsquo;t see anything different.  You&rsquo;ll need to try to install an application to make sure it worked.</p>

<ol>
<li><p>The first program you should try to install is mrxvt.</p></li>
<li><p>This is a terminal application.  Simlar to a DOS prompt on a windows computer.</p></li>
<li><p>I like to test with this program because it doesn&rsquo;t require anything special other than the developer package to run.</p></li>
</ol>
</li>
<li>Download mrxvt in <a href="http://www.mobileread.com/forums/showpost.php?p=46943&amp;postcount=1">this thread on the MobileRead forums</a>.</li>
<li>You will need to unzip the download on your computer.  Windows XP and up has zip functionality built in.  If you need an unzipping program, I suggest <a href="http://www.7zip.org/">7zip</a>.</li>
<li>Once you have unzipped the program, you should see a folder called &ldquo;mrxvt&rdquo;.</li>
<li>Simply copy this folder to the internal memory or CF card on your iLiad.</li>
<li>Browse to the correct directory from your iLiad, and select the line that says &ldquo;mrxvt: Command Shell&rdquo;.</li>
<li>If all went well, it should open up a terminal along with your keyboard.  If you don&rsquo;t know anything about linux, I suggest you click the &ldquo;X&rdquo; to close it, or type &ldquo;exit&rdquo; and hit enter.</li>
</ol>


<p>So now you have shell access, and you&rsquo;ve run your first application.  Many apps use the unzip and run process of installing.  However, others are more complicated and include an installer.  This is the case with a popular 3rd party viewer I&rsquo;ve ported called <a href="http://www.fbreader.org/">FBReader.</a>  I will walk you through the installation of this.</p>

<ol>
<li> Download FBReader from <a href="http://www.mobileread.com/forums/showpost.php?p=72966&amp;postcount=1">this thread on the MobileRead forums</a>.</li>
<li> Unzip it, and copy the folder called &ldquo;fbreaderinst&rdquo; to the Compact Flash (or other flash memory) card on your iLiad.</li>
<li>For FBReader, and other installers, it&rsquo;s important to use a CF card, USB key, or MMC card.  If you install it to the main memory of the iLiad, you may run into problems with the screen refresh.</li>
<li>On your iLiad, browse to where you have copied the installer.  You should see an item called &ldquo;Install FBReader&rdquo;.  Select it.</li>
<li>It will take a little bit of time to install.  At that time, you will see the green light flash, and the bars moving across the bottom.  After it is installed it will tell you &ldquo;FBReader has been installed&rdquo;.</li>
<li>You can safely delete the &ldquo;fbreaderinst&rdquo; folder on your iLiad.</li>
<li>Now, to run FBReader, browse to the &ldquo;Programs&rdquo; directory that the installer created on your memory card.  Inside there, you will see a launcher for FBReader.  Simply select it, and it will start.</li>
<li>Here, you can use the FBReader library to add books, or if your prefer, install the <a href="http://www.mobileread.com/forums/showpost.php?p=103367&amp;postcount=1">FBReader Registry Modifications</a> to open books directly from the contentlister (aka the way you open PDF&rsquo;s and Mobipocket books).
Hopefully you now understand how to install 3rd party programs on your iLiad.  In my next post, I will cover reflashing your iLiad in case something goes wrong and your iLiad won&rsquo;t boot.</li>
</ol>


<p>Feel free to comment, and let me know if there are any confusing areas or things that need to be improved upon.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thanks for Visiting]]></title>
    <link href="http://adamrb.github.io/blog/2007/12/11/thanks-for-visiting/"/>
    <updated>2007-12-11T13:00:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/12/11/thanks-for-visiting</id>
    <content type="html"><![CDATA[<p>I just wanted to express my shock and amazement that I actually have people to regularly read this blog.  According to Google and FeedBurner, I have about 40 visitors a day, and 65 people who subscribe to this via an RSS feed.  They&rsquo;re small, modest numbers I know.  But surprising to me nonetheless.</p>

<p>So my question to you is: What would you like to see more posts about?  General iLiad information?  More technically informative posts?  Status updates and future plans?  I generally only post when I have something big, but if you want more updates, I can do that too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Days between firmware releases]]></title>
    <link href="http://adamrb.github.io/blog/2007/12/05/days-between-firmware-releases/"/>
    <updated>2007-12-05T13:26:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/12/05/days-between-firmware-releases</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been pretty quiet over at iRex lately, so I started to wonder.  How long has it been since firmware 2.11 was released?  It seems like forever.  So I decided to make a spreadsheet that details the amount of time between all of the firmware releases.  It&rsquo;s definitely on an upward scale, but I think the releases have gotten better and better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Palm Applications on the iLiad]]></title>
    <link href="http://adamrb.github.io/blog/2007/11/27/palm-applications-on-the-iliad/"/>
    <updated>2007-11-27T12:42:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/11/27/palm-applications-on-the-iliad</id>
    <content type="html"><![CDATA[<p>A <a href="http://www.mobileread.com/forums/showthread.php?t=16291">post</a> on Mobileread got me thinking, having the Access Palm platform on the iLiad would be probably the greatest killer app.  Not only would you have full PIM support with sync capability, but you would immediately have access to the vast world of Palm applications.</p>

<p>It&rsquo;s already been setup for the Nokia tablets. (<a href="http://www.access-company.com/products/gvm/">http://www.access-company.com/products/gvm/</a>).</p>

<p><a href="http://www.access-company.com/products/gvm/images/home_device.jpg"><img src="http://www.access-company.com/products/gvm/images/home_device.jpg" alt="" /></a></p>

<p>Since both products are Arm/GTK based, I don&rsquo;t think it&rsquo;d be too much of a stretch to port it to the iLiad.  The problem is that I&rsquo;ve been unable to find the source for the Garnet VM used on the Nokia&rsquo;s.</p>

<p>I&rsquo;ve also tried to compile the older PalmOS emulator used for developers.  However, I&rsquo;ve run into some issues as it uses the FLTK toolkit.</p>

<p>I may try to contact the Access company to see if they are willing to share their sources&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Minimo Installer]]></title>
    <link href="http://adamrb.github.io/blog/2007/11/26/minimo-installer/"/>
    <updated>2007-11-26T18:08:00-05:00</updated>
    <id>http://adamrb.github.io/blog/2007/11/26/minimo-installer</id>
    <content type="html"><![CDATA[<p>I realize that I&rsquo;ve neglected my blog for a while.  I thought I would update it with some posts I&rsquo;ve made.  I get a bit of traffic from Google and places other than MobileRead, so it may help the people who stumble here.</p>

<p>If you want to surf the web on your iLiad, I think the best way to do it is with Minimo.  It&rsquo;s a Mozilla based web browser that uses a rendering engine similar to Firefox.  It comes pre-installed on your iLiad, but is locked down in such a way that you can&rsquo;t surf the web with it by default.  I&rsquo;ve made some changes to the chrome files (the user interface), added a launcher, a modified libX11 to perform screen refreshes, and some connection manager scripts.  It works well enough so you can view full web pages on your iLiad.  Javascript is a little slow, and you may sometimes run into a &ldquo;script not responding&rdquo; error.  But if I tell it to continue, it&rsquo;ll usually load just fine.</p>

<p>You can download the installation package and see some screenshots here: <a href="http://www.mobileread.com/forums/showthread.php?t=15448">http://www.mobileread.com/forums/showthread.php?t=15448</a></p>
]]></content>
  </entry>
  
</feed>
